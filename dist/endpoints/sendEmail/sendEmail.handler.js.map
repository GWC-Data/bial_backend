{"version":3,"file":"sendEmail.handler.js","names":["_nodeServerEngine","require","_db","sendEmailHandler","req","res","body","to","cc","subject","html","text","bcc","attachments","replyTo","priority","user","result","emailOptions","sendEmail","error","status","Error","json","console","SendEmailLog","create","toMails","join","ccMails","userId","id","userName","name","userEmail","email","host","appName","logError","exports"],"sources":["../../../src/endpoints/sendEmail/sendEmail.handler.ts"],"sourcesContent":["import {\r\n    EndpointAuthType,\r\n    EndpointRequestType,\r\n    EndpointHandler,\r\n    sendEmail,\r\n    EmailOptions\r\n  } from 'node-server-engine';\r\n  import { Response } from 'express';\r\n  import { SendEmailLog } from 'db';\r\n  \r\n  export const sendEmailHandler: EndpointHandler<EndpointAuthType> = async (\r\n    req: EndpointRequestType[EndpointAuthType],\r\n    res: Response\r\n  ): Promise<void> => {\r\n    const {\r\n      body: { to, cc, subject, html, text, bcc, attachments, replyTo, priority },\r\n      user\r\n    } = req;\r\n  \r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let result: any = {};\r\n  \r\n    try {\r\n      const emailOptions: EmailOptions = {\r\n        to,\r\n        cc,\r\n        subject,\r\n        html,\r\n        text,\r\n        bcc,\r\n        attachments,\r\n        replyTo,\r\n        priority\r\n      };\r\n  \r\n      result = await sendEmail(emailOptions);\r\n  \r\n      if (result?.error || result?.status === 'failed') {\r\n        throw new Error();\r\n      }\r\n      res.status(200).json(result);\r\n    } catch {\r\n      console.error('Email Sending Error:', result?.error);\r\n      res.status(422).json(result);\r\n    } finally {\r\n      try {\r\n        await SendEmailLog.create({\r\n          status: result?.status,\r\n          toMails: (typeof to === 'string' ? to : to?.join(', ')) || null,\r\n          ccMails: (typeof cc === 'string' ? cc : cc?.join(', ')) || null,\r\n          subject,\r\n          body: html || text,\r\n          userId: user?.userId ?? user?.id,\r\n          userName: user?.userName ?? user?.name,\r\n          userEmail: user?.userEmail ?? user?.email,\r\n          host: user?.host,\r\n          appName: user?.appName,\r\n          error: result?.error\r\n        });\r\n      } catch (logError: unknown) {\r\n        console.error('Error Logging Email:', logError);\r\n      }\r\n    }\r\n  };"],"mappings":";;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AAQE,IAAAC,GAAA,GAAAD,OAAA;AAEO,MAAME,gBAAmD,GAAG,MAAAA,CACjEC,GAA0C,EAC1CC,GAAa,KACK;EAClB,MAAM;IACJC,IAAI,EAAE;MAAEC,EAAE;MAAEC,EAAE;MAAEC,OAAO;MAAEC,IAAI;MAAEC,IAAI;MAAEC,GAAG;MAAEC,WAAW;MAAEC,OAAO;MAAEC;IAAS,CAAC;IAC1EC;EACF,CAAC,GAAGZ,GAAG;;EAEP;EACA,IAAIa,MAAW,GAAG,CAAC,CAAC;EAEpB,IAAI;IACF,MAAMC,YAA0B,GAAG;MACjCX,EAAE;MACFC,EAAE;MACFC,OAAO;MACPC,IAAI;MACJC,IAAI;MACJC,GAAG;MACHC,WAAW;MACXC,OAAO;MACPC;IACF,CAAC;IAEDE,MAAM,GAAG,MAAM,IAAAE,2BAAS,EAACD,YAAY,CAAC;IAEtC,IAAID,MAAM,EAAEG,KAAK,IAAIH,MAAM,EAAEI,MAAM,KAAK,QAAQ,EAAE;MAChD,MAAM,IAAIC,KAAK,CAAC,CAAC;IACnB;IACAjB,GAAG,CAACgB,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAACN,MAAM,CAAC;EAC9B,CAAC,CAAC,MAAM;IACNO,OAAO,CAACJ,KAAK,CAAC,sBAAsB,EAAEH,MAAM,EAAEG,KAAK,CAAC;IACpDf,GAAG,CAACgB,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAACN,MAAM,CAAC;EAC9B,CAAC,SAAS;IACR,IAAI;MACF,MAAMQ,gBAAY,CAACC,MAAM,CAAC;QACxBL,MAAM,EAAEJ,MAAM,EAAEI,MAAM;QACtBM,OAAO,EAAE,CAAC,OAAOpB,EAAE,KAAK,QAAQ,GAAGA,EAAE,GAAGA,EAAE,EAAEqB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI;QAC/DC,OAAO,EAAE,CAAC,OAAOrB,EAAE,KAAK,QAAQ,GAAGA,EAAE,GAAGA,EAAE,EAAEoB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI;QAC/DnB,OAAO;QACPH,IAAI,EAAEI,IAAI,IAAIC,IAAI;QAClBmB,MAAM,EAAEd,IAAI,EAAEc,MAAM,IAAId,IAAI,EAAEe,EAAE;QAChCC,QAAQ,EAAEhB,IAAI,EAAEgB,QAAQ,IAAIhB,IAAI,EAAEiB,IAAI;QACtCC,SAAS,EAAElB,IAAI,EAAEkB,SAAS,IAAIlB,IAAI,EAAEmB,KAAK;QACzCC,IAAI,EAAEpB,IAAI,EAAEoB,IAAI;QAChBC,OAAO,EAAErB,IAAI,EAAEqB,OAAO;QACtBjB,KAAK,EAAEH,MAAM,EAAEG;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOkB,QAAiB,EAAE;MAC1Bd,OAAO,CAACJ,KAAK,CAAC,sBAAsB,EAAEkB,QAAQ,CAAC;IACjD;EACF;AACF,CAAC;AAACC,OAAA,CAAApC,gBAAA,GAAAA,gBAAA","ignoreList":[]}