{"version":3,"file":"employee.validator.js","names":["CreateEmployeeValidator","exports","employee_Name","in","exists","errorMessage","isString","exam_Id","isInt","exam_Name","GetEmployeeValidator","id","UpdateEmployeeDetailsValidator","score","result","certificate","DeleteEmployeeDetailsValidator"],"sources":["../../../src/endpoints/employee/employee.validator.ts"],"sourcesContent":["import { Schema } from 'express-validator';\r\n\r\nexport const CreateEmployeeValidator: Schema = {\r\n    employee_Name: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'Employee Name is required',\r\n        },\r\n        isString: {\r\n            errorMessage: 'Employee Name must be a string',\r\n        }\r\n    },\r\n    exam_Id: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'Exam ID is required',\r\n        },\r\n        isInt: {\r\n            errorMessage: 'Exam ID must be an integer',\r\n        }\r\n    },\r\n    exam_Name: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'Exam Name is required',\r\n        },\r\n        isString: {\r\n            errorMessage: 'Exam Name must be a string',\r\n        }\r\n    },\r\n};\r\n\r\nexport const GetEmployeeValidator: Schema = {\r\n    id: {\r\n        in: 'params',\r\n        exists: {\r\n            errorMessage: 'Employee ID is required',\r\n        },\r\n        isInt: {\r\n            errorMessage: 'Employee ID must be an integer',\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const UpdateEmployeeDetailsValidator: Schema = {\r\n    id: {\r\n        in: 'params',\r\n        exists: {\r\n            errorMessage: 'Employee ID is required',\r\n        },\r\n        isInt: {\r\n            errorMessage: 'Employee ID must be an integer',\r\n        },\r\n    },\r\n    score: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'Score is required',\r\n        },\r\n        isInt: {\r\n            errorMessage: 'Score must be an integer',\r\n        }\r\n    },\r\n    result: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'Result is required',\r\n        },\r\n        isString: {\r\n            errorMessage: 'Result must be a string',\r\n        }\r\n    },\r\n    certificate: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'Certificate is required',\r\n        },\r\n        isString: {\r\n            errorMessage: 'Certificate must be a string',\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const DeleteEmployeeDetailsValidator: Schema = {\r\n    id: {\r\n        in: 'params',\r\n        exists: {\r\n            errorMessage: 'Employee ID is required',\r\n        },\r\n        isInt: {\r\n            errorMessage: 'Employee ID must be an integer',\r\n        }\r\n    }\r\n};"],"mappings":";;;;;;AAEO,MAAMA,uBAA+B,GAAAC,OAAA,CAAAD,uBAAA,GAAG;EAC3CE,aAAa,EAAE;IACXC,EAAE,EAAE,MAAM;IACVC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDC,QAAQ,EAAE;MACND,YAAY,EAAE;IAClB;EACJ,CAAC;EACDE,OAAO,EAAE;IACLJ,EAAE,EAAE,MAAM;IACVC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDG,KAAK,EAAE;MACHH,YAAY,EAAE;IAClB;EACJ,CAAC;EACDI,SAAS,EAAE;IACPN,EAAE,EAAE,MAAM;IACVC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDC,QAAQ,EAAE;MACND,YAAY,EAAE;IAClB;EACJ;AACJ,CAAC;AAEM,MAAMK,oBAA4B,GAAAT,OAAA,CAAAS,oBAAA,GAAG;EACxCC,EAAE,EAAE;IACAR,EAAE,EAAE,QAAQ;IACZC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDG,KAAK,EAAE;MACHH,YAAY,EAAE;IAClB;EACJ;AACJ,CAAC;AAGM,MAAMO,8BAAsC,GAAAX,OAAA,CAAAW,8BAAA,GAAG;EAClDD,EAAE,EAAE;IACAR,EAAE,EAAE,QAAQ;IACZC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDG,KAAK,EAAE;MACHH,YAAY,EAAE;IAClB;EACJ,CAAC;EACDQ,KAAK,EAAE;IACHV,EAAE,EAAE,MAAM;IACVC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDG,KAAK,EAAE;MACHH,YAAY,EAAE;IAClB;EACJ,CAAC;EACDS,MAAM,EAAE;IACJX,EAAE,EAAE,MAAM;IACVC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDC,QAAQ,EAAE;MACND,YAAY,EAAE;IAClB;EACJ,CAAC;EACDU,WAAW,EAAE;IACTZ,EAAE,EAAE,MAAM;IACVC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDC,QAAQ,EAAE;MACND,YAAY,EAAE;IAClB;EACJ;AACJ,CAAC;AAGM,MAAMW,8BAAsC,GAAAf,OAAA,CAAAe,8BAAA,GAAG;EAClDL,EAAE,EAAE;IACAR,EAAE,EAAE,QAAQ;IACZC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDG,KAAK,EAAE;MACHH,YAAY,EAAE;IAClB;EACJ;AACJ,CAAC","ignoreList":[]}